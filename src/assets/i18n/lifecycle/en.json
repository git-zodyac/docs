{
  "title": "Module lifecycle",
  "text": "Learn about the lifecycle of a module and how to use it to your advantage.",
  "intro": {
    "title": "Module lifecycle",
    "text": "A module lifecycle is a set of events that are triggered when a module is initialized, ready, started, and destroyed. These events can be used to perform actions at specific times in the module's lifespan.",
    "order": "Lifecycle hooks are called from bottom (children) to top (root). The <code class=\"inserted\">Parent</code> module's hook is being called only <b>AFTER</b> calling it's <code class=\"inserted\">Children</code> hooks. So the <code class=\"inserted\">Parent</code> module is initialized only when it made sure to initialize it's <code class=\"inserted\">Children</code> modules.",
    "example": "So what you see in console when you run this code is:"
  },
  "init": {
    "title": "Initialization",
    "text": "<code class=\"inserted\">onInit</code> is called when the module is being initialized in parent. In case you have a module factory, this hook is called when the module instance is being created."
  }
}
